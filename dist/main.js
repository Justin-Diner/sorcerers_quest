!function(){"use strict";var t={d:function(e,i){for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)}};!function(){t.d({},{l:function(){return j},v:function(){return H}});class e{constructor(t){this.position=t.position,this.value=t.value,this.maxHealth=t.value,this.backgroundColor="green",this.innerSize=254,this.textPosition=t.textPosition}draw(t){t.beginPath(),t.rect(this.position.x,this.position.y,254,24),t.fillStyle="red",t.strokeStyle="black",t.stroke(),t.fill(),t.beginPath(),t.rect(this.position.x,this.position.y,this.innerSize,24),t.strokeStyle="transparent",t.fillStyle=this.backgroundColor,t.fill(),t.fillStyle="white",t.font="14px serif",t.fillText(`${this.value} / ${this.maxHealth}`,this.textPosition,30),t.stroke()}decrease(){this.value>=1&&(this.value-=10,this.innerSize-=254/(this.maxHealth/10))}}const i=new Image;i.src="./assets/sorcerer/Idle.png";const s=new Image;s.src="./assets/sorcerer/idle_left.png";const r=new Image;r.src="./assets/sorcerer/Run.png";const o=new Image;o.src="./assets/sorcerer/sorcerer_run_left.png";const h=new Image;h.src="./assets/sorcerer/Jump.png";const n=new Image;n.src="./assets/sorcerer/leftJump.png";const a=new Image;a.src="./assets/sorcerer/Attack1.png";const l=new Image;l.src="./assets/explosion/Explosion1_long.png";const c=new Image;c.src="./assets/sorcerer/Death.png";const d=231,w=164;let m={},v=0,p=0,y=0,u=0,g=0,x=0,A=0,G=0;class f{constructor(t){this.position=t,this.health=50,this.status="idle",this.direction="right",this.leftMovementStopped=!1,this.rightMovementStopped=!1,this.velocity={x:0,y:1},this.hitbox={position:{x:this.position.x,y:this.position.y},width:69,height:100},this.healthBar=new e({position:{x:54,y:14},value:this.health,textPosition:160})}hitboxDims(){return{topLeft:[this.hitbox.position.x,this.hitbox.position.y],topRight:[this.hitbox.position.x+this.hitbox.width,this.hitbox.position.y],bottomLeft:[this.hitbox.position.x,this.hitbox.position.y+this.hitbox.height],bottomRight:[this.hitbox.position.x+this.hitbox.width,this.hitbox.position.y+this.hitbox.height]}}draw(t){let e;const v="dead"!=this.status,g="dead"===this.status,x="right"===this.direction,A="left"===this.direction,G="idle"===this.status,f="moving"===this.status,b="jumping"===this.status,L="casting"===this.status;x&&G&&v?(e=i,u=5):A&&G&&v?(e=s,u=5,m={0:5,1:4,2:3,3:2,4:1,5:0}):A&&f&&v?(e=o,u=7,m={0:7,1:6,2:5,3:4,4:3,5:2,6:1,7:0}):x&&f&&v?(e=r,u=7):x&&b&&v?(e=h,u=1):A&&b&&v?(e=n,u=1,m={0:1,1:0}):x&&L&&v?(e=a,u=7):g&&(e=c,u=6),g?this.death(t,e):L?(this.oneCast(t,e),this.explosion(t,l)):x&&v?(p=Math.floor(y/5)%u,t.drawImage(e,p*d,56,d,w,this.position.x,this.position.y,231,190)):A&&v&&(p=m[Math.floor(y/5)%u],t.drawImage(e,p*d,56,d,w,this.position.x,this.position.y,231,190)),this.update(),this.updateHitBox(),y>99&&(y=0),y++}update(){this.position.x+=this.velocity.x,this.position.y+=this.velocity.y,this.position.y+w+this.velocity.y<576?this.velocity.y+=.4:this.velocity.y=0}updateHitBox(){this.hitbox={position:{x:this.position.x+81,y:this.position.y},width:69,height:100}}idle(){this.status="idle"}moveRight(){this.resetCastingCounters(),this.position.x>=600?(this.velocity.x=0,this.rightMovementStopped=!0):(this.rightMovementStopped=!1,this.velocity.x+=1),"jumping"===this.status?(this.status="jumping",this.direction="right"):0!=this.velocity.x&&"jumping"!=this.status?(this.status="moving",this.direction="right"):(this.direction="right",this.status="idle")}moveLeft(){this.resetCastingCounters(),this.position.x<0?(this.velocity.x=0,this.leftMovementStopped=!0):(this.leftMovementStopped=!1,this.velocity.x+=1),"jumping"===this.status?(this.status="jumping",this.direction="left"):0!=this.velocity.x&&"jumping"!=this.status?(this.direction="left",this.status="moving"):(this.direction="left",this.status="idle")}jump(){"casting"===this.status?this.status:this.status="jumping",this.velocity.y=-10;let t=setInterval((()=>{"dead"!==this.status?"jumping"===this.status&&(0===this.velocity.y&&0===this.velocity.x?(this.status="idle",clearInterval(t)):0===this.velocity.y&&0!=this.velocity.x&&(this.status="moving",clearInterval(t))):clearInterval(t)}),100)}cast(){this.status="casting",this.direction="right",this.velocity.x=0}death(t,e){v>0?t.drawImage(e,1386,0,d,w,this.position.x,this.position.y-64,240,190):A<=42?(p=Math.floor(g/7)%7,t.drawImage(e,p*d,0,d,w,this.position.x,this.position.y-64,240,190),A++,g++):(v+=1,t.drawImage(e,1386,0,d,w,this.position.x,this.position.y-64,240,190))}oneCast(t,e){let i=0;i>0||(x<=54?(p=Math.floor(g/7)%8,t.drawImage(e,p*d,0,d,w,this.position.x,this.position.y-64,240,190),x++,g++):(i+=1,x=0,g=0,p=0,this.idle()))}resetCastingCounters(){g=0,x=0}explosion(t,e){let i=0;i>0||(G<=60?(p=Math.floor(g/4)%16,t.drawImage(e,p*(e.width/16),0,e.width/14,e.height,680,200,400,300),G++):(i+=1,p=0,G=0))}}let b=0,L=0;const I={1:{x:900,y:60},2:{x:900,y:130},3:{x:900,y:200},4:{x:900,y:270},5:{x:900,y:340},6:{x:900,y:410}},S={1:{x:20,y:60},2:{x:20,y:130},3:{x:20,y:200},4:{x:20,y:270},5:{x:20,y:340},6:{x:20,y:410}};class k{constructor(t){this.image=new Image,this.image.src="./assets/fire_arrow/fire.png",this.totalAnimationFrames=29,this.position=t.position,this.width=76,this.height=70,this.velocity={x:t.velocity.x,y:t.velocity.y},this.hitbox={position:{x:this.position.x,y:this.position.y},width:10,height:10},this.recentlyHit=!1,this.outsideCanvas=!1,this.moving=!1,this.currentDirection=t.currentDirection}draw(t){this.moving=!0,this.move(),this.outsideCanvasCheck(),"right"===this.currentDirection?this.drawRightArrow(t):this.drawLeftArrow(t),this.updateHitBox(),this.animate(t,100,70)}move(){this.position.x+=this.velocity.x,this.position.y+=this.velocity.y}animate(t,e,i){b=Math.floor(L/5)%this.totalAnimationFrames,t.drawImage(this.image,b*e,0,e,i,this.position.x,this.position.y,e,i),L++}reset(){"right"===this.currentDirection?(this.position.x=10,this.position.y=this.generateRandomNumber(0,501),this.velocity.x=this.generateRandomNumber(2,6),this.currentDirection="left"):(this.position.x=900,this.position.y=this.generateRandomNumber(0,500),this.velocity.x=this.generateRandomNumber(2,6),this.velocity.x=-3,this.currentDirection="right"),this.position.y=40}updateHitBox(){"right"===this.currentDirection?this.hitbox={position:{x:this.position.x+37,y:this.position.y+57},width:63,height:6}:this.hitbox={position:{x:this.position.x-6,y:this.position.y+57},width:63,height:6}}ifHit(){setTimeout((()=>{this.recentlyHit=!1}),1500)}generateRandomNumber(t,e){return Math.floor(Math.random()*(t-e+1)+e)}drawLeftArrow(t){t.beginPath(),t.strokeStyle="#964B00",t.lineWidth=3,t.moveTo(this.position.x+50,this.position.y+60),t.lineTo(this.position.x-12,this.position.y+60),t.stroke(),t.beginPath(),t.fillStyle="#5A5A5A",t.moveTo(this.position.x,this.position.y+60),t.lineTo(this.position.x-12,this.position.y+60+4),t.lineTo(this.position.x-12,this.position.y+60-4),t.fill()}drawRightArrow(t){t.beginPath(),t.strokeStyle="#964B00",t.lineWidth=3,t.moveTo(this.position.x+50,this.position.y+60),t.lineTo(this.position.x+100,this.position.y+60),t.stroke(),t.beginPath(),t.fillStyle="#5A5A5A",t.moveTo(this.position.x+96,this.position.y+60),t.lineTo(this.position.x+97+5,this.position.y+60+4),t.lineTo(this.position.x+97+5,this.position.y+60-4),t.fill()}outsideCanvasCheck(){"right"===this.currentDirection&&this.moving&&this.position.x<-106&&(this.outsideCanvas=!0,this.velocity.x=0,this.moving=!1),"left"===this.currentDirection&&this.moving&&this.position.x>H+17&&(this.outsideCanvas=!0,this.velocity.x=0,this.moving=!1),this.position.y>j+1&&(this.outsideCanvas=!0,this.velocity.y=0,this.moving=!1)}}class C{constructor(t){this.position=t.position}}var T={randomShootingPosition(){const t=["right","left"];let e,i,s=t[Math.floor(Math.random()*t.length)];"right"===s?(e=I[1].x,i=I[1].y):(e=S[1].x,i=S[1].y);let r={x:0,y:4};return r.x="left"===s?5:-5,new k({position:{x:e,y:i},currentDirection:s,velocity:{x:r.x,y:r.y}})},dir(t){const e=Util.norm(t);return Util.scale(t,1/e)},dist(t,e){return Math.sqrt(Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2))},norm(t){return Util.dist([0,0],t)},randomVec(t){const e=2*Math.PI*Math.random();return Util.scale([Math.sin(e),Math.cos(e)],t)}};class D{constructor(t){this.level=t}draw(t){t.font="bold 36px serif",t.fillStyle="white",t.fillText(`Level: ${this.level} / 3`,422,39),t.stroke()}}const N=new Image;N.src="./assets/castle/castle.png";class B{constructor(t){this.position={x:680,y:480},this.width=400,this.height=600,this.health=t.health,this.healthbar=new e({position:{x:700,y:14},value:t.health,textPosition:805})}draw(t){t.drawImage(N,this.position.x,0,this.width,this.height)}drawHealthBar(t){this.healthbar.draw(t)}}var M=class{constructor(){this.level=1,this.levelArrows=[],this.castle=new B({health:20})}generateArrows(){for(let t=6;t>5;t--)this.levelArrows.push(new k({position:{x:I[t].x,y:I[t].y},currentDirection:"right",velocity:{x:-10,y:0}}))}};const R=document.getElementById("losing-modal"),F=new class{constructor(t){this.position=t.position,this.image=new Image,this.image.src=t.imageSrc}draw(t){this.image&&t.drawImage(this.image,this.position.x,this.position.y)}}({position:{x:0,y:0},imageSrc:"./assets/forrestbackground/forrestbackground.jpg"}),E={d:{pressed:!1},a:{pressed:!1},space:{pressed:!1},c:{pressed:!1}};class _{constructor(t,e){this.sorcerer=t,this.castle=e,this.gameStarted=!0,this.levelStarted=!1,this.inGameArrows=[],this.lastFiredRightArrowIndex=0,this.lastFiredLeftArrowIndex=0,this.currentLevelNumber=1,this.level,this.newlyGeneratedArrows=[],this.endGame=!1,this.levelThreeSecondWaveSpawned=!1,this.levelTreeThirdWaveSpawned=!1,this.cLocked=!1,this.playerDied=!1,this.camera=new C({position:{x:320,y:this.sorcerer.position.y}}),this.levelIndicator=new D(1),1===this.currentLevelNumber&&(this.level=new M,this.level.generateArrows(),this.inGameArrows=this.level.levelArrows,this.levelStarted=!0),window.addEventListener("keydown",(e=>{"d"===e.key?(E.d.pressed=!0,t.moveRight()):"a"===e.key?(E.a.pressed=!0,t.moveLeft()):" "===e.key?(E.space.pressed=!0,t.jump()):"c"!==e.key||this.cLocked||(E.c.pressed=!0,this.lockC(),t.cast(),this.castle.health-=10,this.castle.healthbar.decrease())})),window.addEventListener("keyup",(t=>{"d"===t.key?(E.d.pressed=!1,this.sorcerer.velocity.x=0,0===this.sorcerer.velocity.x&&"jumping"!=this.sorcerer.status&&(this.sorcerer.status="idle")):"a"===t.key?(E.a.pressed=!1,this.sorcerer.velocity.x=0,0===this.sorcerer.velocity.x&&"jumping"!=this.sorcerer.status&&(this.sorcerer.status="idle")):" "===t.key?E.space.pressed=!1:"c"!==t.key||this.cLocked||(E.c.pressed=!1)})),window.addEventListener("keydown",(function(t){" "==t.key&&t.target==document.body&&t.preventDefault()}))}animate(t){return!!this.isGameOver(t)||(console.log(this.sorcerer.position.x),t.save(),F.draw(t),t.restore(),this.drawLevelIndicator(t),this.drawCastleSorcererAndHealthBars(t),!0===this.levelStarted&&this.beginCurrentLevel(t),"dead"!=this.sorcerer.status&&this.checkIdleStatus(),this.isCollided(t),this.sorcerer.velocity.x=0,E.d.pressed&&!this.sorcerer.rightMovementStopped?this.sorcerer.velocity.x=5:E.a.pressed&&!this.sorcerer.leftMovementStopped&&(this.sorcerer.velocity.x=-5),1!==this.currentLevelNumber&&2!==this.currentLevelNumber||this.beatLevel(),3!==this.currentLevelNumber||this.levelStarted||(this.levelStarted=!0,this.level.generateArrows()),!(3!==this.currentLevelNumber||!this.isVictory())||void 0)}drawLevelIndicator(t){1===this.currentLevelNumber?this.levelIndicator.draw(t):2===this.currentLevelNumber?(this.levelIndicator=new D(2),this.levelIndicator.draw(t)):(this.levelIndicator=new D(3),this.levelIndicator.draw(t))}drawCastleSorcererAndHealthBars(t){this.castle.draw(t),this.castle.healthbar.draw(t),this.sorcerer.draw(t),this.sorcerer.healthBar.draw(t)}beginCurrentLevel(t){"dead"!==this.sorcerer.status&&(1===this.currentLevelNumber&&this.playLevelOne(t),2===this.currentLevelNumber&&this.playLevelTwo(t),3===this.currentLevelNumber&&this.playLevelThree(t))}playLevelOne(t){const e=this.inGameArrows[this.lastFiredRightArrowIndex];e.draw(t),e.moving||this.lastFiredRightArrowIndex++,this.lastFiredRightArrowIndex>=this.inGameArrows.length&&(this.level.generateArrows(),this.inGameArrows=this.level.levelArrows,this.lastFiredRightArrowIndex=0)}playLevelTwo(t){let e=this.level.levelArrows;this.inGameArrows.length||(this.inGameArrows.push(e[0][this.lastFiredRightArrowIndex]),this.inGameArrows.push(e[1][this.lastFiredLeftArrowIndex]));for(let e=0;e<this.inGameArrows.length;e++)this.inGameArrows[e].draw(t);this.inGameArrows[0].moving||(this.lastFiredRightArrowIndex++,this.lastFiredRightArrowIndex>=e[0].length&&(this.level.clearLevelArrows(),this.level.generateArrows(),e=this.level.levelArrows,this.lastFiredRightArrowIndex=0),this.inGameArrows.push(e[0][this.lastFiredRightArrowIndex]),this.inGameArrows.shift()),this.inGameArrows[1].moving||(this.lastFiredLeftArrowIndex++,this.lastFiredLeftArrowIndex>=e[1].length&&(this.level.clearLevelArrows(),this.level.generateArrows(),e=this.level.levelArrows,this.lastFiredLeftArrowIndex=0),this.inGameArrows.push(e[1][this.lastFiredLeftArrowIndex]),this.inGameArrows.shift())}playLevelThree(t){const e=this.level.levelArrows;if(this.inGameArrows.length>6&&this.inGameArrows.splice(6),this.newlyGeneratedArrows.length>6&&this.newlyGeneratedArrows.splice(6),this.inGameArrows.length||(this.inGameArrows.push(e[0][0]),this.inGameArrows.push(e[1][0])),this.inGameArrows[0].draw(t),this.inGameArrows[1].draw(t),this.inGameArrows[0].moving||(this.inGameArrows[0].position.x=900,this.inGameArrows[0].moving=!0,this.inGameArrows[0].outSideCanvas=!1,this.inGameArrows[0].velocity.x=-10,this.inGameArrows[0].draw(t)),this.inGameArrows[1].moving||(this.inGameArrows[1].position.x=20,this.inGameArrows[1].moving=!0,this.inGameArrows[1].outSideCanvas=!1,this.inGameArrows[1].velocity.x=10,this.inGameArrows[1].draw(t)),this.levelThreeSecondWaveSpawned||(this.levelThreeSecondWaveSpawned=!0,setTimeout((()=>{this.inGameArrows.push(e[0][5]),this.inGameArrows.push(e[1][5])}),1e3)),this.inGameArrows[2]&&(this.inGameArrows[2].moving||(this.inGameArrows[2].position.x=900,this.inGameArrows[2].moving=!0,this.inGameArrows[2].outSideCanvas=!1,this.inGameArrows[2].velocity.x=-10,this.inGameArrows[2].draw(t)),this.inGameArrows[2].draw(t)),this.inGameArrows[3]&&(this.inGameArrows[3].moving||(this.inGameArrows[3].position.x=20,this.inGameArrows[3].moving=!0,this.inGameArrows[3].outSideCanvas=!1,this.inGameArrows[3].velocity.x=10,this.inGameArrows[3].draw(t)),this.inGameArrows[3].draw(t)),this.levelTreeThirdWaveSpawned||setTimeout((()=>{this.levelTreeThirdWaveSpawned=!0,this.inGameArrows.push(e[0][2]),this.inGameArrows.push(e[1][2])}),2500),this.inGameArrows[4]&&(this.inGameArrows[4].moving||(this.inGameArrows[4].position.x=900,this.inGameArrows[4].moving=!0,this.inGameArrows[4].outSideCanvas=!1,this.inGameArrows[4].velocity.x=-10,this.inGameArrows[4].draw(t)),this.inGameArrows[4].draw(t)),this.inGameArrows[5]&&(this.inGameArrows[5].moving||(this.inGameArrows[5].position.x=20,this.inGameArrows[5].moving=!0,this.inGameArrows[5].outSideCanvas=!1,this.inGameArrows[5].velocity.x=10,this.inGameArrows[5].draw(t)),this.inGameArrows[5].draw(t)),this.newlyGeneratedArrows.length)for(let e=0;e<this.newlyGeneratedArrows.length;e++)this.newlyGeneratedArrows[e].draw(t)}isCollided(){if(this.deathCheck())return!0;const t=this.sorcerer.hitboxDims(),e=t.topLeft,i=t.topRight,s=t.bottomRight;for(let t=0;t<this.inGameArrows.length;t++)if(!this.inGameArrows[t].recentlyHit&&this.inGameArrows[t].moving){const r=this.inGameArrows[t].hitbox.position.x,o=this.inGameArrows[t].hitbox.position.y;r>e[0]&&r<i[0]&&o<s[1]&&o>i[1]&&(this.stopArrowInGameArrowDamage(t),this.inGameArrows[t].ifHit(),this.sorcerer.health-=10,this.sorcerer.healthBar.decrease(),this.newlyGeneratedArrows.push(T.randomShootingPosition()))}if(this.newlyGeneratedArrows.length)for(let t=0;t<this.newlyGeneratedArrows.length;t++)if(!this.newlyGeneratedArrows[t].recentlyHit&&this.newlyGeneratedArrows[t].moving){const r=this.newlyGeneratedArrows[t].hitbox.position.x,o=this.newlyGeneratedArrows[t].hitbox.position.y;r>e[0]&&r<i[0]&&o<s[1]&&o>i[1]&&(this.stopNewlyGeneratedArrowDamage(t),this.newlyGeneratedArrows[t].ifHit(),this.sorcerer.health-=10,this.sorcerer.healthBar.decrease(),this.newlyGeneratedArrows.push(T.randomShootingPosition()))}}isOutOfBounds(t){let e=t[0],i=t[1];return e<0||e>1024||i>576}stopArrowInGameArrowDamage(t){this.inGameArrows[t].recentlyHit=!0,this.inGameArrows.slice(t,1)}stopNewlyGeneratedArrowDamage(t){this.newlyGeneratedArrows[t].recentlyHit=!0,this.newlyGeneratedArrows.slice(t,1)}isGameOver(){if(this.endGame)return!0;if(this.sorcerer.health<1&&!this.playerDied){this.sorcerer.status="dead",this.playerDied=!0,this.gameStarted=!1,this.levelStarted=!1,this.cLocked=!0;const t=setTimeout((()=>{R.style.display="flex",this.endGame=!0,clearTimeout(t)}),1e3)}}isVictory(){if(this.endGame)return!0;if(3===this.currentLevelNumber&&this.castle.health<1){let t=document.getElementById("winning-modal");const e=setTimeout((()=>{t.style.display="flex",this.endGame=!0,this.cLocked=!0,clearTimeout(e)}),500)}}beatLevel(){if(this.castle.health<1){if(this.levelStarted=!1,1===this.currentLevelNumber){this.castle=new B({health:10}),this.resetForNewLevel();const t=document.getElementById("level_two_start_modal");document.getElementById("level_two_start_button").addEventListener("click",(()=>{t.style.display="none",this.startLevelTwo()})),t.style.display="flex"}if(2===this.currentLevelNumber){this.castle=new B({health:100}),this.resetForNewLevel();const t=document.getElementById("level_three_start_modal");document.getElementById("level_three_start_button").addEventListener("click",(()=>{t.style.display="none",this.startLevelThree()})),t.style.display="flex"}}}resetForNewLevel(){!1===this.levelStarted&&(this.inGameArrows=[],this.lastFiredLeftArrowIndex=0,this.lastFiredRightArrowIndex=0)}startLevelTwo(){this.currentLevelNumber=2,this.level=new class{constructor(){this.level=2,this.levelArrows=[[],[]],this.castle=new B({health:50})}clearLevelArrows(){this.levelArrows=[[],[]]}generateArrows(){for(let t=6;t>0;t--)this.levelArrows[0].push(new k({position:{x:I[t].x,y:I[t].y},currentDirection:"right",velocity:{x:-10,y:0}})),this.levelArrows[1].push(new k({position:{x:S[t].x,y:S[t].y},currentDirection:"left",velocity:{x:10,y:0}}))}},this.level.generateArrows(),this.inGameArrows=[this.level.levelArrows[0][0],this.level.levelArrows[1][0]],this.castle=this.level.castle,this.levelStarted=!0}startLevelThree(){this.currentLevelNumber=3,this.level=new class{constructor(t){this.level=3,this.levelArrows=[[],[]],this.sorcerer=t,this.castle=new B({health:100})}generateArrows(){for(let t=6;t>0;t--)this.levelArrows[0].push(new k({position:{x:I[t].x,y:I[t].y},currentDirection:"right",velocity:{x:-10,y:0}})),this.levelArrows[1].push(new k({position:{x:S[t].x,y:S[t].y},currentDirection:"left",velocity:{x:10,y:0}}))}},this.level.generateArrows(),this.inGameArrows=[this.level.levelArrows[0][0],this.level.levelArrows[1][0]],this.castle=this.level.castle,this.levelStarted=!0}lockC(){if(!this.cLocked){this.cLocked=!0;const t=setTimeout((()=>{this.unlockC(),clearInterval(t)}),3e3)}}unlockC(){this.cLocked=!1}checkIdleStatus(){Object.values(E).every((t=>!t.pressed))&&"jumping"!=this.sorcerer.status&&0!=this.sorcerer.velocity.x&&(E.d.pressed||E.a.pressed?this.sorcerer.status="moving":"jumping"==this.sorcerer.status&&"dead"==this.sorcerer.status||(this.sorcerer.status="idle"))}deathCheck(){if("dead"===this.sorcerer.status)return!0}}const j=576,H=1024;document.addEventListener("DOMContentLoaded",(()=>{const t=document.getElementById("canvas"),e=t.getContext("2d");t.height=j,t.width=H,e.fillStyle="gray",e.fillRect(0,0,H,j);const i=document.getElementsByClassName("modal"),s=document.getElementById("starting-modal"),r=document.getElementById("start_game_button"),o=document.getElementById("replay_button"),h=document.getElementById("losing_button");d(i);let n=!1,a=new M,l=new f({x:180,y:280}),c=new _(l,a.castle);function d(t){for(let e=0;e<t.length;e++)t[e].style.display="none"}function w(){a=new M,l=new f({x:180,y:280}),c=new _(l,a.castle),d(i),n=!0,m()}function m(){n&&c.animate(e)?n=!1:requestAnimationFrame(m)}r.addEventListener("click",(()=>{d(i),n=!0,m()})),h.addEventListener("click",(()=>{w()})),o.addEventListener("click",(()=>{w()})),s.style.display="flex"}))}()}();
//# sourceMappingURL=main.js.map